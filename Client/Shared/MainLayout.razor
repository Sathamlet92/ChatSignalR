@inherits LayoutComponentBase
@inject NavigationManager _navigation
@inject HttpClient _client

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>
<MudLayout>
    <MudAppBar>         
        <AuthorizeView>
            <Authorized>
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Success" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
                <MudPaper   class="top-row px-8">        
                    <h6 class="mx-2">Bienvenido: @context.User.Identity!.Name</h6>
                    <MudButton Variant="Variant.Filled" @onclick="LogoutUser" Color="Color.Secondary">Cerrar sesión</MudButton>
                </MudPaper > 
            </Authorized>
            <NotAuthorized>
                <MudButton Variant="Variant.Filled" Color="Color.Primary">Crear cuenta</MudButton>
                <MudButton Variant="Variant.Filled" @onclick="LogInUser" Color="Color.Secondary">Iniciar sesión</MudButton>
            </NotAuthorized> 
        </AuthorizeView>       
    </MudAppBar>
        <AuthorizeView>
            <Authorized>
                <MudDrawer @bind-Open="@_drawerOpen">
                    <NavMenu/>
                </MudDrawer>
            </Authorized>                     
        </AuthorizeView>           
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>
@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}



@code
{
    private async Task LogoutUser()
    {
        await _client.GetAsync("api/user/logoutuser");
        _navigation.NavigateTo("/", true);
    }
    private void LogInUser()
    {
        _navigation.NavigateTo("/", true);
    }
}