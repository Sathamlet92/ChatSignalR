@page "/"
@using BlazingChat.Service.ViewsModels
@inject IProfileVM _profile

<EditForm class="col-12" Model="@_profile">
    <DataAnnotationsValidator />
    <InputText @bind-Value="@_profile.FirstName" class="form-control" placeholder="Nombre(s)"/>
    <ValidationMessage For="@(() => _profile.FirstName)"/>
    <br/>
    <InputText @bind-Value="@_profile.SecondName" class="form-control" placeholder="Segundo nombre (opcional)"/>
    <br/>
    <InputText @bind-Value="@_profile.LastName" class="form-control" placeholder="Primer apellido"/>
    <ValidationMessage For="@(() => _profile.LastName)"/>
    <br/>
    <InputText @bind-Value="@_profile.SecondLastName" class="form-control" placeholder="Segundo apellido (opcional)"/>
    <br/>
    <InputText @bind-Value="@_profile.EmailAddress" class="form-control" placeholder="Correo electronico"/>
    <ValidationMessage For="@(() => _profile.EmailAddress)"/>
    <br/>
    <InputText @bind-Value="@_profile.Phone" class="form-control" placeholder="Teléfono"/>
    <ValidationMessage For="@(() => _profile.Phone)"/>
    <br/>
    <button disabled="@(!context.Validate())" type="submit" class="btn btn-primary" @onclick="UpdateProfile">Actualizar perfils</button>
    <button type="button" class="btn btn-primary" @onclick="GetProfile">Ver perfil</button>
    <span>&nbsp;&nbsp;</span>@(_profile.Message ?? string.Empty)
</EditForm>


@code {    
    protected override async Task OnInitializedAsync() => await _profile.GetProfile();

    private async Task UpdateProfile() => await _profile.UpdateProfile(_profile);

    private async Task GetProfile() => await _profile.GetProfile();
}